return function()
  local blog_db = require'blog_db'

  local iter = coroutine.create(function()
    local set, err = blog_db.getAll()
    print("set:", set, err)
    if err then return err end
    for i, res in ipairs(set) do
      print("res", res)
      local id = res[i].id
      local title = res[i].title
      local abstract = res[i].abstract
      local created = res[i].created
      coroutine.yield(id, title, abstract, created)
    end
  end)

  return function()
    print("load_blogs")
    local div = READ_FILE(HTDOCS .. "blog_preview.html")
    local _, fname, post_name, post_preview, d = coroutine.resume( iter )
    if not _ then LOG.e("/", fname) return end
    if fname == nil then return end -- stop iterator
    div = string.gsub(div, "{fname}", fname)
    div = string.gsub(div, "{title}", post_name)
    div = string.gsub(div, "{preview}", post_preview)
    div = string.gsub(div, "{date}", d)
    return div
  end
end
