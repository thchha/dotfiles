<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>

  <!-- Basic Page Needs
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <meta charset="utf-8">
  <title>Barebones: Responsive CSS Boilerplate</title>
  <meta name="description" content="">
  <meta name="author" content="">

  <!-- Mobile Specific Metas
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- FONT
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <link href='//fonts.googleapis.com/css?family=Raleway:400,300,600' rel='stylesheet' type='text/css'>

  <!-- CSS
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
  <link rel="stylesheet" href="css/normalize.css">
  <link rel="stylesheet" href="css/barebones.css">
  <link rel="stylesheet" href="css/skeleton-legacy.css">

  <!-- Scripts
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <link rel="stylesheet" href="css/github-prettify-theme.css">
  <link id="prettify-dark" rel="stylesheet" href="css/github-prettify-theme-dark.css" disabled>
  <script src="js/smoothscroll.min.js"></script>



  <!-- Favicon
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <!-- generics -->
  <link rel="icon" href="dist/images/favicon-16.png" sizes="16x16">
	<link rel="icon" href="dist/images/favicon-32.png"  sizes="32x32">
	<link rel="icon" href="dist/images/favicon-57.png"  sizes="57x57">
	<link rel="icon" href="dist/images/favicon-76.png"  sizes="76x76">
	<link rel="icon" href="dist/images/favicon-96.png"  sizes="96x96">
	<link rel="icon" href="dist/images/favicon-128.png" sizes="128x128">
	<link rel="icon" href="dist/images/favicon-196.png" sizes="196x196">
	<link rel="icon" href="dist/images/favicon-228.png" sizes="228x228">
	<!-- Android -->
	<link rel="shortcut icon" href="dist/images/favicon-196.png" sizes="196x196">
	<!-- iOS -->
	<link rel="apple-touch-icon" href="dist/images/favicon-120.png" sizes="120x120">
	<link rel="apple-touch-icon" href="dist/images/favicon-152.png" sizes="152x152">
	<link rel="apple-touch-icon" href="dist/images/favicon-180.png" sizes="180x180">
	<!-- Windows -->
	<meta name="msapplication-TileColor" content="#FFFFFF">
	<meta name="msapplication-TileImage" content="dist/images/favicon-144.png">

</head>
<body class="code-snippets-visible">
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T73X8LP"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

  <!-- Primary Page Layout
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <div class="container">
    <section class="header">
      <h2 class="title">A modern, responsive boilerplate laid bare.</h2>
      <a id="download-button" class="button button-primary" href="https://github.com/acahir/Barebones/archive/3.0.1.zip">Download</a>
      <div class="value-props grid-container">
      	<div class="value-prop">
      	 	<i class="fas fa-th"></i>
      		Build using CSS Grid for more flexility than 12-column layout.
      	</div>
      	<div class="value-prop">
      		<i class="fas fa-moon"></i>
      		Simple theming using CSS Variables including example "dark mode".
      	</div>
      	<div class="value-prop">
      		<i class="fab fa-css3-alt"></i>
      		Ready for upcoming drafts including prefers-color-scheme, env vars.
      	</div>
      	<div class="value-prop value-header">
      		<h4>All while keeping what made Skeleton great:</h4>
      	</div>
      	<div class="value-prop">
      		<i class="fas fa-feather-alt"></i>
      		Light as a feather at ~400 lines &amp; built with mobile in mind.
      	</div>
      	<div class="value-prop">
      	 	<i class="fas fa-drafting-compass"></i>
      		Styles designed to be a starting point, not a UI framework.
      	</div>
      	<div class="value-prop">
      		<i class="fas fa-shipping-fast"></i>
      		Quick to start with zero compiling or installing necessary.
      	</div>
      </div>
    </section>

    <div class="navbar-spacer"></div>
    <nav class="navbar" id="navbar">
      <div class="container">
        <ul class="navbar-list">
          <li class="navbar-item"><a class="navbar-link" href="#intro">Intro</a></li>
          <li class="navbar-item">
            <a class="navbar-link" href="#" data-popover="codeNavPopover">Code</a>
            <div id="codeNavPopover" class="popover">
              <ul class="popover-list">
                <li class="popover-item">
                  <a class="popover-link" href="#themes">Themes</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#grid">Grid</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#typography">Typography</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#buttons">Buttons</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#forms">Forms</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#lists">Lists</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#code">Code</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#tables">Tables</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#queries">Queries</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#utilities">Utilities</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="#legacy">Legacy</a>
                </li>
              </ul>
            </div>
          </li>
          <li class="navbar-item"><a class="navbar-link" href="#examples">Examples</a></li>
          <li class="navbar-item">
            <a class="navbar-link" href="#" data-popover="moreNavPopover">More</a>
            <div id="moreNavPopover" class="popover">
              <ul class="popover-list">
              	<li class="popover-item">
                  <a class="popover-link" href="#resources">Resources</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/acahir/Barebones">On Github</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/dhg/Skeleton#browser-support">Browsers</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/dhg/Skeleton#license">License</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/dhg/Skeleton#extensions">Extensions</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/dhg/Skeleton/releases">Versions</a>
                </li>
                <li class="popover-item">
                  <a class="popover-link" href="https://github.com/dhg/Skeleton#colophon">Colophon</a>
                </li>
              </ul>
            </div>
          </li>
        </ul>
      </div>
    </nav>

    <!-- Why use Skeleton -->
    <div class="docs-section" id="intro">
      <h6 class="docs-header">Is Barebones for you?</h6>
      <p>You should use Barebones if you're embarking on a smaller project or just don't feel like you need all the utility of larger frameworks. Barebones only styles a handful of standard HTML elements and CSS Grid, but that's often more than enough to get started.</p>
      <p>In fact, while this looks like the original Skeleton site, it's made using Barebones, allowing lighter html and more flexible CSS. Barebones also includes support for <a href="#legacy">legacy Skeleton sites</a> without changes.</p>
      <p>Use Barebones and want to lay yourself bare? Let others know!</p>
      <a href="https://twitter.com/share" class="twitter-share-button" data-url="https://acahir.github.io/Barebones/" data-text="Barebones - A modern, responsive boilerplate laid bare.">Tweet</a>
      <iframe src="https://ghbtns.com/github-btn.html?user=acahir&repo=Barebones&type=watch&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="110" height="20"></iframe>
      <iframe src="https://ghbtns.com/github-btn.html?user=acahir&repo=Barebones&type=fork&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="110" height="20"></iframe>
    </div>

    <!-- Themes -->
    <div class="docs-section" id="themes">
      <h6 class="docs-header">Themes</h6>
      <p>CSS Variables allow Barebones to maintain it's independence on additional tools such as CSS preprocessors SCSS or Less, while gaining centralized management of global values. This allows for much easier theming and rebranding.</p>
      <p>The default theme maintains the color choices from Skeleton, although  a few very similar colors were consolidated. Colors are based from a theme hue, which defines the <code>normal</code> text color. Additional <code>richer</code> and <code>softer</code> text colors are then defined.</p>
      <p>The choice of those keywords is to prevent confusion with light vs dark themes. For example. in a light background theme, <code>softer</code> would mean a lighter color than <code>normal</code>, ie less contrast with the background, but if the base hue is dark, <code>softer</code> would be darker to decrease the contrast.</p>
      
<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint">/* default theme: light background, dark text, blue accent */
--theme-hue: 0;         /* white */
--accent-hue: 194;      /* blue */

--text-color-richer: hsl(var(--theme-hue), 0%, 5%);      /* #0d0d0d    */
--text-color-normal: hsl(var(--theme-hue), 0%, 13%);     /* #222222     text color; button:hover:focus color */
--text-color-softer: hsl(var(--theme-hue), 0%, 33%);     /* #555555     button color; button:hover border */

--accent-color: hsl(var(--accent-hue), 86%, 57%);        /* #33C3F0     link; button-primary bg+border; textarea,select:focus border */
--accent-color-hover: hsl(var(--accent-hue), 76%, 49%);  /* #1EAEDB     link hover; button-primary:hover:focus bg+border */

--border-color: hsl(var(--theme-hue), 0%, 73%);          /* #bbbbbb    button border */
--border-color-softer: hsl(var(--theme-hue), 0%, 82%);   /* #d1d1d1    textarea,select,code,td,hr border   */

--background-color: white;                               /* transparent body background; textarea,select background */
--background-color-softer: hsl(var(--theme-hue), 0%, 95%);
--code-background: hsl(var(--theme-hue), 0%, 95%);       /* #f1f1f1     code background*/

--button-primary-color: white;

</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->

			<p>A dark theme is included in Barebones inside a <code>prefers-color-scheme: dark</code> media selector. This is a new selector not widely supported by browers yet, but demonstrates a second theme.</p>
			
			<p>You can use the buttons below to switch between these themes</p>
			<div class="themeButtons">
				<button class="button-primary lightTheme">Light</button>
				<button class="darkTheme">Dark</button>
			</div>		
		</div>
			
    <!-- Grid -->
    <div class="docs-section" id="grid">
      <h6 class="docs-header">Grids</h6>
      <p>Barebones replaces the fixed 12-column grid with CSS Grid: a more flexible and powerful foundation supported natively in CSS. If you've ever fought a Flexbox layout to do what you want, you'll probably find CSS Grid a lot easier to work with as it was designed specifically for laying out in two dimensions.</p>
      <p>Barebones only includes a few basic layouts, but note the Fifths wouldn't be easy with the 12-column layout.</p>
      <div class="grid-container halves grid-container-example">
      	<div>Halves</div>
      	<div>Halves</div>
      </div>
      <div class="grid-container thirds grid-container-example">
      	<div>Thirds</div>
      	<div>Thirds</div>
      	<div>Thirds</div>
      </div>
      <div class="grid-container quarters grid-container-example">
      	<div>Quarters</div>
      	<div>Quarters</div>
      	<div>Quarters</div>
      	<div>Quarters</div>
      </div>
      <div class="grid-container fifths grid-container-example">
      	<div>Fifths</div>
      	<div>Fifths</div>
      	<div>Fifths</div>
      	<div>Fifths</div>
      	<div>Fifths</div>
      </div>
      
<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><!-- start with a grid-container -->
<!-- direct children are automatically grid items -->
<div class="grid-container halves">
	<div>Halves</div>
	<div>Halves</div>
</div>

<!-- multiple rows don't require separate containers -->
<div class="grid-container thirds">
	<div>Thirds</div>
	<div>Thirds</div>
	<div>Thirds</div>
	<div>Thirds</div>
	<div>Thirds</div>
	<div>Thirds</div>
</div>
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->

			<p>There's a lot of possibilities with CSS Grid and great <a href="#resources">resources</a> available without repeating a how-to guide here.</p>
		</div>

    <!-- Typography -->
    <div class="docs-section" id="typography">
      <h6 class="docs-header">Typography</h6>
      <p>Type is all set with the <code>rems</code>, so font-sizes and spacial relationships can be responsively sized based on a single <code>&lt;html&gt;</code> font-size property. Out of the box, Barebones never changes the <code>&lt;html&gt;</code> font-size, but it's there in case you need it for your project. All measurements are still base 10 though so, an <code>&lt;h1&gt;</code> with <code>5.0rem</code>font-size just means <code>50px</code>.</p>
      <div class="docs-example grid-container halves u-align-left">
				<div>
					<p><strong>The typography base</strong> is <a href="http://www.google.com/fonts/specimen/Raleway">Raleway</a> served by Google, set at 16rem (16px) over a 1.6 line height (24px). Other type basics like <a href="#">anchors</a>, <strong>strong</strong>, <em>emphasis</em>, and <u>underline</u> are all obviously included.</p>
					<p><strong>Headings</strong> create a family of distinct sizes each with specific <code>letter-spacing</code>, <code>line-height</code>, and <code>margins</code>.</p>
				</div>
				<div>
					<h1>Heading<span class="heading-font-size"> <code>&lt;h1&gt;</code> 50rem</span></h1>
					<h2>Heading<span class="heading-font-size"> <code>&lt;h2&gt;</code> 42rem</span></h2>
					<h3>Heading<span class="heading-font-size"> <code>&lt;h3&gt;</code> 36rem</span></h3>
					<h4>Heading<span class="heading-font-size"> <code>&lt;h4&gt;</code> 30rem</span></h4>
					<h5>Heading<span class="heading-font-size"> <code>&lt;h5&gt;</code> 24rem</span></h5>
					<h6>Heading<span class="heading-font-size"> <code>&lt;h6&gt;</code> 15rem</span></h6>
				</div>
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><!-- Standard Headings -->
<h1>Heading</h1>
<h2>Heading</h2>
<h3>Heading</h3>
<h4>Heading</h4>
<h5>Heading</h5>
<h6>Heading</h6>

<!-- Base type size -->
<p>The base type is 15px over 1.6 line height (24px)</p>

<!-- Other styled text tags -->
<strong>Bolded</strong>
<em>Italicized</em>
<a>Colored</a>
<u>Underlined</u>
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Buttons -->
    <div class="docs-section" id="buttons">
      <h6 class="docs-header">Buttons</h6>
      <p>Buttons come in two basic flavors in Barebones. The standard <code>&lt;button&gt;</code> element is plain, whereas the <code>.button-primary</code> button is vibrant and prominent. Button styles are applied to a number of appropriate form elements, but can also be arbitrarily attached to anchors with a <code>.button</code> class.</p>
      <div class="docs-example grid-container quarters">
				<a class="button" href="#">Anchor button</a>
				<button>Button element</button>
				<input type="submit" value="submit input">
				<input type="button" value="button input">
				<a class="button button-primary" href="#">Anchor button</a>
				<button class="button-primary">Button element</button>
				<input class="button-primary" type="submit" value="submit input">
				<input class="button-primary" type="button" value="button input">
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><!-- Standard buttons -->
<a class="button" href="#">Anchor button</a>
<button>Button element</button>
<input type="submit" value="submit input">
<input type="button" value="button input">

<!-- Primary buttons -->
<a class="button button-primary" href="#">Anchor button</a>
<button class="button-primary">Button element</button>
<input class="button-primary" type="submit" value="submit input">
<input class="button-primary" type="button" value="button input">
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Forms -->
    <div class="docs-section" id="forms">
      <h6 class="docs-header">Forms</h6>
      <p>Forms are a huge pain, but hopefully these styles make it a bit easier. All inputs, select, and buttons are normalized for a common height cross-browser so inputs can be stacked or placed alongside each other.</p>
      <div class="docs-example docs-example-forms">
        <form>
          <div class="grid-container halves">
            <div>
              <label for="exampleEmailInput">Your email</label>
              <input class="u-full-width" type="email" placeholder="test@mailbox.com" id="exampleEmailInput">
            </div>
            <div>
              <label for="exampleRecipientInput">Reason for contacting</label>
              <select class="u-full-width" id="exampleRecipientInput">
                <option value="Option 1">Questions</option>
                <option value="Option 2">Admiration</option>
                <option value="Option 3">Can I get your number?</option>
              </select>
            </div>
          </div>
          <label for="exampleMessage">Message</label>
          <textarea class="u-full-width" placeholder="Hi Dave &hellip;" id="exampleMessage"></textarea>
          <label class="example-send-yourself-copy">
            <input type="checkbox">
            <span class="label-body">Send a copy to yourself</span>
          </label>
          <input class="button-primary" type="submit" value="Submit">
        </form>
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><!-- The above form looks like this -->
<form>
  <div class="row">
    <div class="six columns">
      <label for="exampleEmailInput">Your email</label>
      <input class="u-full-width" type="email" placeholder="test@mailbox.com" id="exampleEmailInput">
    </div>
    <div class="six columns">
      <label for="exampleRecipientInput">Reason for contacting</label>
      <select class="u-full-width" id="exampleRecipientInput">
        <option value="Option 1">Questions</option>
        <option value="Option 2">Admiration</option>
        <option value="Option 3">Can I get your number?</option>
      </select>
    </div>
  </div>
  <label for="exampleMessage">Message</label>
  <textarea class="u-full-width" placeholder="Hi Dave &hellip;" id="exampleMessage"></textarea>
  <label class="example-send-yourself-copy">
    <input type="checkbox">
    <span class="label-body">Send a copy to yourself</span>
  </label>
  <input class="button-primary" type="submit" value="Submit">
</form>

<!-- Always wrap checkbox and radio inputs in a label and use a <span class="label-body"> inside of it -->

<!-- Note: The class .u-full-width is just a utility class shorthand for width: 100% -->
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Lists -->
    <div class="docs-section" id="lists">
      <h6 class="docs-header">Lists</h6>
      <div class="docs-example grid-container halves u-align-left">
        <div>
          <ul>
            <li>Unordered lists have basic styles</li>
            <li>
              They use the circle list style
              <ul>
                <li>Nested lists styled to feel right</li>
                <li>Can nest either type of list into the other</li>
                <li>Third Level Lists work as well
                	<ul>
                		<li>How low can you go?</li>
                	</ul>
                </li>
              </ul>
            </li>
            <li>Just more list items mama san</li>
          </ul>
        </div>
        <div>
          <ol>
            <li>Ordered lists also have basic styles</li>
            <li>
              They use the decimal list style
              <ul>
                <li>Ordered and unordered can be nested</li>
                <li>Can nest either type of list into the other</li>
              </ul>
            </li>
            <li>Last list item just for the fun</li>
          </ol>
        </div>
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><ul>
  <li>Item 1</li>
  <li>
    Item 2
    <ul>
      <li>Item 2.1</li>
      <li>Item 2.2</li>
    </ul>
  </li>
  <li>Item 3</li>
</ul>

<!-- Easily substitute any <ul> or an <ol> to get number lists or sublists. -->
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->

<p>One change from Skeleton is that font-size does not decrease with nested lists, instead using the <code>--text-color-softer</code> variable for nested list color. This allows deeper nesting without readability problems.</p>

    </div>

    <!-- Code -->
    <div class="docs-section" id="code">
      <h6 class="docs-header">Code</h6>
      <p>Code styling is kept basic – just wrap anything in a <code>&lt;code&gt;</code> and it will appear like <code>this</code>. For blocks of code, wrap a <code>&lt;code&gt;</code> with a <code>&lt;pre&gt;</code>.</p>
      <div class="docs-example">
<pre><code>.some-class {
  background-color: red;
}</code></pre>
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><pre><code>.some-class {
  background-color: red;
}</code></pre>

<!-- Remember every whitespace and break will be preserved in a <pre> -->
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Tables -->
    <div class="docs-section" id="tables">
      <h6 class="docs-header">Tables</h6>
      <p>Be sure to use properly formed table markup with <code>&lt;thead&gt;</code> and <code>&lt;tbody&gt;</code> when building a <code>table</code>.</p>
      <div class="docs-example">
        <table class="u-full-width">
          <thead>
            <tr>
              <th>Name</th>
              <th>Age</th>
              <th>Sex</th>
              <th>Location</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Dave Gamache</td>
              <td>26</td>
              <td>Male</td>
              <td>San Francisco</td>
            </tr>
            <tr>
              <td>Dwayne Johnson</td>
              <td>42</td>
              <td>Male</td>
              <td>Hayward</td>
            </tr>
          </tbody>
        </table>
      </div>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint"><table class="u-full-width">
  <thead>
    <tr>
      <th>Name</th>
      <th>Age</th>
      <th>Sex</th>
      <th>Location</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Dave Gamache</td>
      <td>26</td>
      <td>Male</td>
      <td>San Francisco</td>
    </tr>
    <tr>
      <td>Dwayne Johnson</td>
      <td>42</td>
      <td>Male</td>
      <td>Hayward</td>
    </tr>
  </tbody>
</table>
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Queries -->
    <div class="docs-section" id="queries">
      <h6 class="docs-header">Media queries</h6>
      <p>Barebones uses media queries to serve its scalable grid, but also has a list of queries for convenience of styling your site across devices. The queries are mobile-first, meaning they target <code>min-width</code>. It means all styles outside of a query apply to all devices, then larger devices are targeted for enhancement. This prevents small devices from having to parse tons of unused CSS.</p>
      
      <p>Barebones makes some changes to Skeleten's default break points, based on personal experience and <a href="https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862">some really good rational</a>. The sizes for the queries are currently:</p>
      <div class="docs-example row">
        <div class="six columns">
          <ul>
            <li><strong>Desktop HD</strong>: 1200px</li>
            <li><strong>Desktop</strong>: 900px</li>
            <li><strong>Mobile</strong>: 600px</li>
          </ul>
        </div>
      </div>
      <p>With the upcoming env() variables in CSS, Barebones will be updated to make media queries top level variables to easily change breakpoints as desired.</p>


<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint">/* Mobile first queries */

/* Larger than mobile (default point when grid becomes active) */
@media (min-width: 600px) {}

/* Larger than phablet */
@media (min-width: 900px) {}

/* Larger than tablet */
@media (min-width: 1200px) {}

</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->


    </div>

    <!-- Utilities and Misc. -->
    <div class="docs-section" id="utilities">
      <h6 class="docs-header">Utilities</h6>
      <p>Barebones has a number of small utility classes that act as easy-to-use helpers. Sometimes it's better to use a utility class than create a whole new class just to float an element.</p>

<!-- CODE EXAMPLE ———————————————————————————————————————— -->
<pre class="code-example">
<code class="code-example-body prettyprint">/* Utility Classes */

/* Make element full width */
.u-full-width {
  width: 100%;
  box-sizing: border-box; }

/* Make sure elements don't run outside containers (great for images in columns) */
.u-max-full-width {
  max-width: 100%;
  box-sizing: border-box; }

/* Float either direction */
.u-pull-right {
  float: right; }
.u-pull-left {
  float: left; }

/* Override default content alignment */
.u-align-left {
	text-align: left; }
.u-align-right {
	text-align: right; }

/* Clear a float */
.u-cf {
  content: "";
  display: table;
  clear: both; }
</code>
</pre>
<!-- ————————————————————————————————————————————————————— -->
		</div>

		<!-- Legacy -->
    <div class="docs-section" id="legacy">
      <h6 class="docs-header">Legacy Support</h6>
      <p>If you have a site originally build with Skeleton and want to migrate to Barebones without breaking everything at once, we'll help you keep those skeletons hidden in the closet. Simply include the <code>skeleton-legacy.css</code> file to provide backwards compatibility for all classes removed from Barebones.</p>
      <p>The legacy classes, which mostly applied to grids, have been updated to use Barebone's CSS Variables and CSS Grid system so any overall changes will still be applied across the entire site. See below for a demo using the html from the original Skeleton site styled with Barebones and legacy css.</p>
      <div class="example-grid docs-example">
        <div class="row">
          <div class="one column">One</div>
          <div class="eleven columns">Eleven</div>
        </div>
        <div class="row">
          <div class="two columns">Two</div>
          <div class="ten columns">Ten</div>
        </div>
        <div class="row">
          <div class="three columns">Three</div>
          <div class="nine columns">Nine</div>
        </div>
        <div class="row">
          <div class="four columns">Four</div>
          <div class="eight columns">Eight</div>
        </div>
        <div class="row">
          <div class="five columns">Five</div>
          <div class="seven columns">Seven</div>
        </div>
        <div class="row">
          <div class="six columns">Six</div>
          <div class="six columns">Six</div>
        </div>
        <div class="row">
          <div class="seven columns">Seven</div>
          <div class="five columns">Five</div>
        </div>
        <div class="row">
          <div class="eight columns">Eight</div>
          <div class="four  columns">Four</div>
        </div>
        <div class="row">
          <div class="nine columns">Nine</div>
          <div class="three columns">Three</div>
        </div>
        <div class="row">
          <div class="ten columns">Ten</div>
          <div class="two columns">Two</div>
        </div>
        <div class="row">
          <div class="eleven columns">Eleven</div>
          <div class="one column">One</div>
        </div>
      </div>
    </div>

    <!-- Resources -->
    <div class="docs-section" id="resources">
      <h6 class="docs-header">Resources</h6>
      <p>Links to resources for some of the newer features used in Barebones and some of the up and coming standards with included support:</p>

      <div class="grid-container halves u-align-left">
				<div>
	      	<p>CSS Variables<p>
					<ul>
						<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables">Using CSS Variables</a></li>
					</ul>
					<p>CSS Grid<p>
					<ul>
						<li><a href="https://hacks.mozilla.org/2017/10/an-introduction-to-css-grid-layout-part-1/">An Introduction to CSS Grid Layout</a></li>
						<li><a href="https://css-tricks.com/snippets/css/complete-guide-grid/">CSS Grid Complete Guide</a></li>
						<li><a href="https://gridbyexample.com/examples/">Grid by Example</a></li>
					</ul>
				</div>
				<div>
				<p>Up and Coming Standards<p>
					<ul>
						<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/env">MDN env()</a></li>
						<li><a href="https://css-tricks.com/css-environment-variables/">CSS Environment Variables</a></li>
						<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme">MDN prefers-color-scheme</a></li>
						<li><a href="https://css-tricks.com/dark-modes-with-css/">Dark Mode With CSS</a></li>
					</ul>
				</div>
      </div>



    </div>

    <!-- Examples -->
    <div class="docs-section examples" id="examples">
      <h6 class="docs-header">Examples</h6>
      <div class="grid-container halves u-align-left">
      	<div>
      		<a target="_blank" href="examples/legacy-landing/">
      			<img class="examples-img" src="images/examples/landing.jpg">
      		</a>
        </div>
        <div>
          <h6 class="example-header">Legacy Landing Page</h6>
          <p class="example-description">The landing page example from Skeleton with only two changes: <code>barebones.css</code> and <code>skeleton-legacy.css</code>. Total time to convert: 5s.</p>
          <a class="button" href="examples/legacy-landing" target="_blank">Demo</a>
          <a class="button" href="https://github.com/dhg/Skeleton/tree/gh-pages/examples/legacy-landing" target="_blank">Source</a>
        </div>
      	<div>
      		<a target="_blank" href="examples/skeleton.html">
      			<img class="examples-img" src="images/examples/skeleton.png">
      		</a>
        </div>
        <div>
          <h6 class="example-header">Legacy Project Page</h6>
          <p class="example-description">The orignial project page (this page) from the Skeleton repo, styled by <code>barebones.css</code> and <code>skeleton-legacy.css</code>.</p>
          
          <a class="button" href="examples/skeleton.html" target="_blank">Demo</a>
        </div>
      </div>
    </div>
  </div>
  
<!-- End Document
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
</body>
</html>
