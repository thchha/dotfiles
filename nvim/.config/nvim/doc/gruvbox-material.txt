l.txt*    Gruvbox with Material Palette

CONTENTS                                     *gruvbox-material-contents*

Introduction                                 |gruvbox-material-introduction|
Installation                                 |gruvbox-material-installation|
Usage                                        |gruvbox-material-usage|
Configuration                                |gruvbox-material-configuration|
FAQ                                          |gruvbox-material-faq|

==============================================================================
INTRODUCTION                                    *gruvbox-material-introduction*

In my opinion, the very first thing a color scheme should do is to be
eye-friendly, anything else is secondary. This requires soft contrast and low
blue light.

Gruvbox Material is based on Gruvbox, but with a very different color palette,
I'm trying to adjust the foreground colors to match these requirements.

The syntax highlighting logic used in this branch is almost the same as the
original gruvbox. In addition, I've developed `neosyn` branch that uses
another syntax highlighting logic, and it has also been optimized for common
file types and plugins.

==============================================================================
INSTALLATION                                    *gruvbox-material-installation*

------------------------------------------------------------------------------
Via Plugin Manager~

    Take [vim-plug](https://github.com/junegunn/vim-plug) for example:
>
	Plug 'sainnhe/gruvbox-material'
<
    For better syntax highlighting support, please install
    [sheerun/vim-polyglot](https://github.com/sheerun/vim-polyglot).

------------------------------------------------------------------------------
Manually~

    1. Clone this repository.

    2. Copy `/path/to/gruvbox-material/colors/gruvbox-material.vim` to
    `~/.vim/colors/` .

    3. Copy `/path/to/gruvbox-material/doc/gruvbox-material.txt` to
    `~/.vim/doc/` and execute `:helptags ~/.vim/doc/` to generate help tags.

    4. To install [airline](https://github.com/vim-airline/vim-airline) theme,
    copy `/path/to/gruvbox-material/autoload/airline/themes/gruvbox_material.vim`
    to `~/.vim/autoload/airline/themes/gruvbox_material.vim` .

    5. To install [lightline](https://github.com/itchyny/lightline.vim) theme,
    copy `/path/to/gruvbox-material/autoload/lightline/colorscheme/gruvbox_material.vim` 
    to `~/.vim/autoload/lightline/colorscheme/gruvbox_material.vim` .

------------------------------------------------------------------------------
AUR~

    There is a package available for Arch Linux users in AUR:
    https://aur.archlinux.org/packages/gruvbox-material-git

==============================================================================
USAGE                                                  *gruvbox-material-usage*

------------------------------------------------------------------------------
Vim~

    Put something like this in your vimrc:
>
	" if you don't set this option, this color scheme will fall back to the original gruvbox
	set termguicolors

	" for dark version
	set background=dark

	" for light version
	set background=light

	" set contrast
	" this configuration option should be placed before `colorscheme gruvbox-material`
	" available values: 'hard', 'medium'(default), 'soft'
	let g:gruvbox_material_background = 'soft'

	colorscheme gruvbox-material
<
    See |gruvbox-material-configuration| for more configuration options.

    If you want to apply this color scheme temporarily, run this command in
    vim(this may cause broken colors):
>
	:colorscheme gruvbox-material
<
------------------------------------------------------------------------------
Airline~

    To enable [airline](https://github.com/vim-airline/vim-airline) color
    scheme, put this in your vimrc:
>
	let g:airline_theme = 'gruvbox_material'
<
    To apply it without reloading:
>
	:AirlineTheme gruvbox_material
<
------------------------------------------------------------------------------
Lightline~

    To enable [lightline](https://github.com/itchyny/lightline.vim) color
    scheme, put this in your vimrc:
>
	let g:lightline = {}
	let g:lightline.colorscheme = 'gruvbox_material'
    
	" or this line
	let g:lightline = {'colorscheme' : 'gruvbox_material'}
<
    To apply it without reloading:
>
	:let g:lightline.colorscheme = 'gruvbox_material'
	:call lightline#init()
	:call lightline#colorscheme()
<
==============================================================================
CONFIGURATION                                  *gruvbox-material-configuration*

Note: the configuration options should be placed before `colorscheme gruvbox-material`

E.g.~
>
    set termguicolors
    set background=light

    let g:gruvbox_material_background = 'soft'
    let g:gruvbox_material_disable_italic_comment = 1

    colorscheme gruvbox-material
    let g:lightline.colorscheme = 'gruvbox_material'
<
------------------------------------------------------------------------------
                                                *g:gruvbox_material_background*

The background contrast used in this color scheme.

    Available values: `'hard'`, `'medium'`, `'soft'`
    Default value: `'medium'`

E.g.~
>
    let g:gruvbox_material_background = 'hard'
<
------------------------------------------------------------------------------
                                    *g:gruvbox_material_disable_italic_comment*

By default, italic is enabled in `Comment`. To disable italic in `Comment`, set
this option to `1`.

E.g.~
>
    let g:gruvbox_material_disable_italic_comment = 1
<
------------------------------------------------------------------------------
                                               *g:gruvbox_material_enable_bold*

By default, bold is only enabled in the highlight groups I think are
necessary, but you can use this option to enable bold like the original
gruvbox. To enable this feature, set this option to `1`.

E.g.~
>
    let g:gruvbox_material_enable_bold = 1
<
------------------------------------------------------------------------------
                                    *g:gruvbox_material_transparent_background*

To use transparent background, set this option to `1`.

E.g.~
>
    let g:gruvbox_material_transparent_background = 1
<
Note: {{{
I personally do not encourage you to enable this option, as this color
scheme is designed for eye protection and concentration instead of looking
cool. To be honest, this color scheme might look better when not in
transparent mode.

If you do need transparent, I would recommend you to use composite manager
with blur feature, for example https://github.com/tryone144/compton

Here is a screenshot: https://user-images.githubusercontent.com/37491630/69637420-91c40100-1093-11ea-8728-78244ee2b5f4.png

Nevertheless, I will do my best to provide a good experience in transparent
mode. If you encounter any problems, feel free to open an issue or PR :)
}}}

------------------------------------------------------------------------------
                                    		    *g:gruvbox_material_visual*

Control the `Visual` and the `VisualNOS` highlight group.

    Available values: `'green background'`, `'blue background'`, `'red background'`, `'reverse'`
    Default value: `'green background'`

E.g.~
>
    let g:gruvbox_material_visual = 'reverse'
<
------------------------------------------------------------------------------
                                              *g:gruvbox_material_current_word*

Some plugins can highlight the word under current cursor, you can use this
option to control their behavior.

Currently support:

- https://github.com/neoclide/coc-highlight
- https://github.com/dominikduda/vim_current_word
- https://github.com/RRethy/vim-illuminate
- https://github.com/itchyny/vim-cursorword

    Available values: `'grey background'`, `'bold'`, `'underline'`, `'italic'`
    Default value: `'grey background'` when not in transparent mode, `'bold'`
    when in transparent mode.

E.g.~
>
    let g:gruvbox_material_current_word = 'bold'
<
------------------------------------------------------------------------------
                                    *g:gruvbox_material_lightline_disable_bold*

By default, bold is enabled in lightline color scheme. To disable bold in
lightline color scheme, set this option to `1`.

E.g.~
>
    let g:gruvbox_material_lightline_disable_bold = 1
<
Note: this configuration option doesn't need to be placed before `colorscheme gruvbox-material`

==============================================================================
FAQ                                                      *gruvbox-material-faq*

------------------------------------------------------------------------------
Q:~
    It doesn't work as expected.

A:~
    1. This color scheme is mainly designed for true colors, `set termguicolors`
    is required. Check output of `vim --version`, maybe your vim doesn't support
    `termguicolors`.

    2. Maybe your terminal emulator doesn't support true colors, you can test
    it using [this script](https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern).

    3. If you are running vim in tmux, you need to override default true
    colors of tmux, as tmux cannot display true color properly:
    [#1246 How to use true colors in vim under tmux?](https://github.com/tmux/tmux/issues/1246)

    4. There are many highlight group links in syntax files while a color
    scheme may change them, enabling one color scheme based on another color
    scheme enabled is very likely to cause colors to break. If any color is
    broken, you can enable the color scheme in your vimrc instead of after
    vim startup.

------------------------------------------------------------------------------
Q:~
    What's your status line configuration?

A:~
    Check this [gist](https://gist.github.com/sainnhe/b8240bc047313fd6185bb8052df5a8fb).

------------------------------------------------------------------------------
Q:~
    What's the font used here?

A:~
    [Fira Code Nerd Font](https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/FiraCode).

==============================================================================
vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:noet:fen:fdm=marker:fmr={{{,}}}:

